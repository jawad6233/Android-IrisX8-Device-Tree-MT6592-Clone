From 6953318723419339b2d01e0d33b3ca847000c9bf Mon Sep 17 00:00:00 2001
From: adi766 <adityakumarteli7846@gmail.com>
Date: Sat, 23 Sep 2017 16:46:42 +0000
Subject: [PATCH] Fix Graphics

---
 core/java/android/app/ActivityThread.java     |   6 +-
 core/java/android/os/GraphicsEnvironment.java | 112 --------------------------
 core/jni/Android.mk                           |   1 -
 core/jni/AndroidRuntime.cpp                   |   2 -
 core/jni/android_os_GraphicsEnvironment.cpp   |  44 ----------
 5 files changed, 2 insertions(+), 163 deletions(-)
 delete mode 100644 core/java/android/os/GraphicsEnvironment.java
 delete mode 100644 core/jni/android_os_GraphicsEnvironment.cpp

diff --git a/core/java/android/app/ActivityThread.java b/core/java/android/app/ActivityThread.java
index c2999437582..8a433842c11 100644
--- a/core/java/android/app/ActivityThread.java
+++ b/core/java/android/app/ActivityThread.java
@@ -63,7 +63,6 @@
 import android.os.Debug;
 import android.os.DropBoxManager;
 import android.os.Environment;
-import android.os.GraphicsEnvironment;
 import android.os.Handler;
 import android.os.IBinder;
 import android.os.LocaleList;
@@ -5099,7 +5098,7 @@ final void handleTrimMemory(int level) {
         WindowManagerGlobal.getInstance().trimMemory(level);
     }
 
-    private void setupGraphicsSupport(Context context, File cacheDir) {
+    private void setupGraphicsSupport(LoadedApk info, File cacheDir) {
         if (Process.isIsolated()) {
             // Isolated processes aren't going to do UI.
             return;
@@ -5112,7 +5111,6 @@ private void setupGraphicsSupport(Context context, File cacheDir) {
             if (packages != null) {
                 ThreadedRenderer.setupDiskCache(cacheDir);
                 RenderScriptCacheDir.setupDiskCache(cacheDir);
-                GraphicsEnvironment.setupGraphicsEnvironment(context);
             }
         } catch (RemoteException e) {
             throw e.rethrowFromSystemServer();
@@ -5407,7 +5405,7 @@ private void handleBindApplication(AppBindData data) {
             final Context deviceContext = appContext.createDeviceProtectedStorageContext();
             final File codeCacheDir = deviceContext.getCodeCacheDir();
             if (codeCacheDir != null) {
-                setupGraphicsSupport(appContext, codeCacheDir);
+                setupGraphicsSupport(data.info, codeCacheDir);
             } else {
                 Log.e(TAG, "Unable to setupGraphicsSupport due to missing code-cache directory");
             }
diff --git a/core/java/android/os/GraphicsEnvironment.java b/core/java/android/os/GraphicsEnvironment.java
deleted file mode 100644
index e4cdbce0979..00000000000
--- a/core/java/android/os/GraphicsEnvironment.java
+++ /dev/null
@@ -1,112 +0,0 @@
-/*
- * Copyright 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package android.os;
-
-import android.content.Context;
-import android.content.pm.ApplicationInfo;
-import android.content.pm.PackageManager;
-import android.opengl.EGL14;
-import android.os.SystemProperties;
-import android.util.Log;
-
-import dalvik.system.VMRuntime;
-
-import java.io.File;
-
-/** @hide */
-public final class GraphicsEnvironment {
-
-    private static final boolean DEBUG = false;
-    private static final String TAG = "GraphicsEnvironment";
-    private static final String PROPERTY_GFX_DRIVER = "ro.gfx.driver.0";
-
-    public static void setupGraphicsEnvironment(Context context) {
-        chooseDriver(context);
-
-        // Now that we've figured out which driver to use for this process, load and initialize it.
-        // This can take multiple frame periods, and it would otherwise happen as part of the first
-        // frame, increasing first-frame latency. Starting it here, as a low-priority background
-        // thread, means that it's usually done long before we start drawing the first frame,
-        // without significantly disrupting other activity launch work.
-        Thread eglInitThread = new Thread(
-                () -> {
-                    EGL14.eglGetDisplay(EGL14.EGL_DEFAULT_DISPLAY);
-                },
-                "EGL Init");
-        eglInitThread.start();
-    }
-
-    private static void chooseDriver(Context context) {
-        String driverPackageName = SystemProperties.get(PROPERTY_GFX_DRIVER);
-        if (driverPackageName == null || driverPackageName.isEmpty()) {
-            return;
-        }
-        // To minimize risk of driver updates crippling the device beyond user repair, never use an
-        // updated driver for privileged or non-updated system apps. Presumably pre-installed apps
-        // were tested thoroughly with the pre-installed driver.
-        ApplicationInfo ai = context.getApplicationInfo();
-        if (ai.isPrivilegedApp() || (ai.isSystemApp() && !ai.isUpdatedSystemApp())) {
-            if (DEBUG) Log.v(TAG, "ignoring driver package for privileged/non-updated system app");
-            return;
-        }
-        ApplicationInfo driverInfo;
-        try {
-            driverInfo = context.getPackageManager().getApplicationInfo(driverPackageName,
-                    PackageManager.MATCH_SYSTEM_ONLY);
-        } catch (PackageManager.NameNotFoundException e) {
-            Log.w(TAG, "driver package '" + driverPackageName + "' not installed");
-            return;
-        }
-        String abi = chooseAbi(driverInfo);
-        if (abi == null) {
-            if (DEBUG) {
-                // This is the normal case for the pre-installed empty driver package, don't spam
-                if (driverInfo.isUpdatedSystemApp()) {
-                    Log.w(TAG, "updated driver package has no compatible native libraries");
-                }
-            }
-            return;
-        }
-
-        StringBuilder sb = new StringBuilder();
-        sb.append(driverInfo.nativeLibraryDir)
-          .append(File.pathSeparator);
-        sb.append(driverInfo.sourceDir)
-          .append("!/lib/")
-          .append(abi);
-        String paths = sb.toString();
-
-        if (DEBUG) Log.v(TAG, "gfx driver package libs: " + paths);
-        setDriverPath(paths);
-    }
-
-    private static String chooseAbi(ApplicationInfo ai) {
-        String isa = VMRuntime.getCurrentInstructionSet();
-        if (ai.primaryCpuAbi != null &&
-                isa.equals(VMRuntime.getInstructionSet(ai.primaryCpuAbi))) {
-            return ai.primaryCpuAbi;
-        }
-        if (ai.secondaryCpuAbi != null &&
-                isa.equals(VMRuntime.getInstructionSet(ai.secondaryCpuAbi))) {
-            return ai.secondaryCpuAbi;
-        }
-        return null;
-    }
-
-    private static native void setDriverPath(String path);
-
-}
diff --git a/core/jni/Android.mk b/core/jni/Android.mk
index df107ed5964..fe361f5eae5 100644
--- a/core/jni/Android.mk
+++ b/core/jni/Android.mk
@@ -81,7 +81,6 @@ LOCAL_SRC_FILES:= \
     android_text_AndroidBidi.cpp \
     android_text_StaticLayout.cpp \
     android_os_Debug.cpp \
-    android_os_GraphicsEnvironment.cpp \
     android_os_MemoryFile.cpp \
     android_os_MessageQueue.cpp \
     android_os_Parcel.cpp \
diff --git a/core/jni/AndroidRuntime.cpp b/core/jni/AndroidRuntime.cpp
index 065458da4d9..c2cd366632b 100644
--- a/core/jni/AndroidRuntime.cpp
+++ b/core/jni/AndroidRuntime.cpp
@@ -157,7 +157,6 @@ extern int register_android_database_SQLiteGlobal(JNIEnv* env);
 extern int register_android_database_SQLiteDebug(JNIEnv* env);
 extern int register_android_nio_utils(JNIEnv* env);
 extern int register_android_os_Debug(JNIEnv* env);
-extern int register_android_os_GraphicsEnvironment(JNIEnv* env);
 extern int register_android_os_MessageQueue(JNIEnv* env);
 extern int register_android_os_Parcel(JNIEnv* env);
 extern int register_android_os_SELinux(JNIEnv* env);
@@ -1351,7 +1350,6 @@ static const RegJNIRec gRegJNI[] = {
     REG_JNI(register_android_database_SQLiteDebug),
     REG_JNI(register_android_os_Debug),
     REG_JNI(register_android_os_FileObserver),
-    REG_JNI(register_android_os_GraphicsEnvironment),
     REG_JNI(register_android_os_MessageQueue),
     REG_JNI(register_android_os_SELinux),
     REG_JNI(register_android_os_Trace),
diff --git a/core/jni/android_os_GraphicsEnvironment.cpp b/core/jni/android_os_GraphicsEnvironment.cpp
deleted file mode 100644
index 905a85adc55..00000000000
--- a/core/jni/android_os_GraphicsEnvironment.cpp
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Copyright 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#define LOG_TAG "GraphicsEnvironment"
-
-#include <gui/GraphicsEnv.h>
-#include <nativehelper/ScopedUtfChars.h>
-#include "core_jni_helpers.h"
-
-namespace {
-
-void setDriverPath(JNIEnv* env, jobject clazz, jstring path) {
-    ScopedUtfChars pathChars(env, path);
-    android::GraphicsEnv::getInstance().setDriverPath(pathChars.c_str());
-}
-
-const JNINativeMethod g_methods[] = {
-    { "setDriverPath", "(Ljava/lang/String;)V", reinterpret_cast<void*>(setDriverPath) },
-};
-
-const char* const kGraphicsEnvironmentName = "android/os/GraphicsEnvironment";
-
-} // anonymous namespace
-
-namespace android {
-
-int register_android_os_GraphicsEnvironment(JNIEnv* env) {
-    return RegisterMethodsOrDie(env, kGraphicsEnvironmentName, g_methods, NELEM(g_methods));
-}
-
-} // namespace android

From 15c368f3a051e0be7ffc9df33ae9527972574a33 Mon Sep 17 00:00:00 2001
From: adi766 <adityakumarteli7846@gmail.com>
Date: Sat, 23 Sep 2017 16:48:05 +0000
Subject: [PATCH] Fix hwui

---
 libs/hwui/Caches.cpp                  | 13 +++----------
 libs/hwui/renderthread/EglManager.cpp |  5 +----
 2 files changed, 4 insertions(+), 14 deletions(-)

diff --git a/libs/hwui/Caches.cpp b/libs/hwui/Caches.cpp
index a8ced9b2597..f263bdacd41 100644
--- a/libs/hwui/Caches.cpp
+++ b/libs/hwui/Caches.cpp
@@ -83,16 +83,9 @@ bool Caches::init() {
 }
 
 void Caches::initExtensions() {
-    if (mExtensions.hasDebugMarker()) {
-        eventMark = glInsertEventMarkerEXT;
-
-        startMark = glPushGroupMarkerEXT;
-        endMark = glPopGroupMarkerEXT;
-    } else {
-        eventMark = eventMarkNull;
-        startMark = startMarkNull;
-        endMark = endMarkNull;
-    }
+    eventMark = eventMarkNull;
+    startMark = startMarkNull;
+    endMark = endMarkNull;
 }
 
 void Caches::initConstraints() {
diff --git a/libs/hwui/renderthread/EglManager.cpp b/libs/hwui/renderthread/EglManager.cpp
index a4aefe7d067..12d71065ccf 100644
--- a/libs/hwui/renderthread/EglManager.cpp
+++ b/libs/hwui/renderthread/EglManager.cpp
@@ -339,10 +339,7 @@ bool EglManager::swapBuffers(const Frame& frame, const SkRect& screenDirty) {
         fence();
     }
 
-    EGLint rects[4];
-    frame.map(screenDirty, rects);
-    eglSwapBuffersWithDamageKHR(mEglDisplay, frame.mSurface, rects,
-            screenDirty.isEmpty() ? 0 : 1);
+    eglSwapBuffers(mEglDisplay, frame.mSurface);
 
     EGLint err = eglGetError();
     if (CC_LIKELY(err == EGL_SUCCESS)) {

From bd0226010010770783c6b7379fbb6b79d2c187ad Mon Sep 17 00:00:00 2001
From: adi766 <adityakumarteli7846@gmail.com>
Date: Sat, 23 Sep 2017 16:49:48 +0000
Subject: [PATCH] Fix MTP

---
 core/java/android/os/storage/IMountService.java                | 1 +
 core/java/android/os/storage/StorageManager.java               | 3 +++
 packages/MtpDocumentsProvider/src/com/android/mtp/AppFuse.java | 3 +--
 3 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/core/java/android/os/storage/IMountService.java b/core/java/android/os/storage/IMountService.java
index 9f4b05cb4d4..1073126326f 100644
--- a/core/java/android/os/storage/IMountService.java
+++ b/core/java/android/os/storage/IMountService.java
@@ -2179,6 +2179,7 @@ public boolean onTransact(int code, Parcel data, Parcel reply,
                     data.enforceInterface(DESCRIPTOR);
                     String name = data.readString();
                     ParcelFileDescriptor fd = mountAppFuse(name);
+		    if(fd == null) return true;
                     reply.writeNoException();
                     reply.writeParcelable(fd, Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
                     return true;
diff --git a/core/java/android/os/storage/StorageManager.java b/core/java/android/os/storage/StorageManager.java
index ffad91b03aa..01407e153e6 100644
--- a/core/java/android/os/storage/StorageManager.java
+++ b/core/java/android/os/storage/StorageManager.java
@@ -1290,7 +1290,10 @@ public ParcelFileDescriptor mountAppFuse(String name) {
             return mMountService.mountAppFuse(name);
         } catch (RemoteException e) {
             throw e.rethrowFromSystemServer();
+	} catch (Exception e) {
+            Log.e(TAG, "TTT mountAppFuse error: "+e.getMessage());
         }
+	return null;
     }
 
     /// Consts to match the password types in cryptfs.h
diff --git a/packages/MtpDocumentsProvider/src/com/android/mtp/AppFuse.java b/packages/MtpDocumentsProvider/src/com/android/mtp/AppFuse.java
index cd78e610654..b03acbbd50e 100644
--- a/packages/MtpDocumentsProvider/src/com/android/mtp/AppFuse.java
+++ b/packages/MtpDocumentsProvider/src/com/android/mtp/AppFuse.java
@@ -67,8 +67,7 @@
     void mount(StorageManager storageManager) throws IOException {
         Preconditions.checkState(mDeviceFd == null);
         mDeviceFd = storageManager.mountAppFuse(mName);
-        mMessageThread = new AppFuseMessageThread(mDeviceFd.dup().detachFd());
-        mMessageThread.start();
+        if(mDeviceFd != null) { mMessageThread = new AppFuseMessageThread(mDeviceFd.dup().detachFd()); mMessageThread.start();}
     }
 
     @VisibleForTesting

From 4d7f3ed8ae0004f5de7c3f429442b919d410f4ae Mon Sep 17 00:00:00 2001
From: adi766 <adityakumarteli7846@gmail.com>
Date: Sat, 23 Sep 2017 16:53:20 +0000
Subject: [PATCH] Fix Camera & Remove BatteryStatsService error in log

---
 core/java/android/hardware/camera2/legacy/RequestThreadManager.java | 2 ++
 services/core/java/com/android/server/am/BatteryStatsService.java   | 1 -
 2 files changed, 2 insertions(+), 1 deletion(-)

diff --git a/core/java/android/hardware/camera2/legacy/RequestThreadManager.java b/core/java/android/hardware/camera2/legacy/RequestThreadManager.java
index da62f5445da..ccd7657170c 100644
--- a/core/java/android/hardware/camera2/legacy/RequestThreadManager.java
+++ b/core/java/android/hardware/camera2/legacy/RequestThreadManager.java
@@ -242,6 +242,8 @@ public void onPictureTaken(byte[] data, Camera camera) {
                     }
                 } catch (LegacyExceptionUtils.BufferQueueAbandonedException e) {
                     Log.w(TAG, "Surface abandoned, dropping frame. ", e);
+		} catch (IllegalArgumentException e) {
+                    Log.w(TAG, "no valid native surface, dropping frame. ", e);
                 }
             }
 
diff --git a/services/core/java/com/android/server/am/BatteryStatsService.java b/services/core/java/com/android/server/am/BatteryStatsService.java
index 845a604a5f5..bb5a8fefff0 100644
--- a/services/core/java/com/android/server/am/BatteryStatsService.java
+++ b/services/core/java/com/android/server/am/BatteryStatsService.java
@@ -1430,7 +1430,6 @@ private WifiActivityEnergyInfo extractDelta(WifiActivityEnergyInfo latest) {
                 return data;
             }
         }
-        Slog.e(TAG, "no controller energy info supplied");
         return null;
     }
 

From 7dd65ac2903b9b71a385b826135c19616c646f07 Mon Sep 17 00:00:00 2001
From: adi766 <adityakumarteli7846@gmail.com>
Date: Sat, 23 Sep 2017 16:55:59 +0000
Subject: [PATCH] Show carrier name instead of numeric operator

---
 .../statusbar/policy/MobileSignalController.java         | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/MobileSignalController.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/MobileSignalController.java
index f35393496fa..3ab309b16a7 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/MobileSignalController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/MobileSignalController.java
@@ -93,6 +93,11 @@ public MobileSignalController(Context context, Config config, boolean hasMobileD
 
         String networkName = info.getCarrierName() != null ? info.getCarrierName().toString()
                 : mNetworkNameDefault;
+	if (isNumeric(networkName)) {
+            String displayName = info.getDisplayName() != null? info.getDisplayName().toString()
+                : mNetworkNameDefault;
+            networkName = displayName;
+        }
         mLastState.networkName = mCurrentState.networkName = networkName;
         mLastState.networkNameData = mCurrentState.networkNameData = networkName;
         mLastState.enabled = mCurrentState.enabled = hasMobileData;
@@ -101,6 +106,13 @@ public MobileSignalController(Context context, Config config, boolean hasMobileD
         updateDataSim();
     }
 
+    private boolean isNumeric(String str) {
+        for (char c : str.toCharArray()) {
+            if (!Character.isDigit(c)) return false;
+        }
+        return true;
+    }
+
     public void setConfiguration(Config config) {
         mConfig = config;
         mapIconSets();
@@ -380,10 +392,10 @@ void updateNetworkName(boolean showSpn, String spn, String dataSpn,
         StringBuilder str = new StringBuilder();
         StringBuilder strData = new StringBuilder();
         if (showPlmn && plmn != null) {
-            str.append(plmn);
+            if (!isNumeric(plmn)) str.append(plmn);
             strData.append(plmn);
         }
-        if (showSpn && spn != null) {
+        if (spn != null) {
             if (str.length() != 0) {
                 str.append(mNetworkNameSeparator);
             }

From 16a59aeeb757408213ea9b4f87a624020c35fffc Mon Sep 17 00:00:00 2001
From: LineageOS-MTK <luzejij@binka.me>
Date: Wed, 4 Oct 2017 10:06:53 +0300
Subject: [PATCH] =?UTF-8?q?=D0=98=D1=81=D0=BF=D1=80=D0=B0=D0=B2=D0=BB?=
 =?UTF-8?q?=D0=B5=D0=BD=D0=B8=D1=8F=20=D0=B4=D0=BB=D1=8F=20NetdConnector?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Исправление ошибok:
NetdConnector: Communications error: java.io.IOException: Connection
refused
NetdConnector: Error in NativeDaemonConnector: java.io.IOException:
Connection refused
NetdConnector: NDC Command ...
NetdConnector: Error handling '613 IfaceClass idle (null)':
java.lang.NumberFormatException: For input string: "(null)"

Signed-off-by: teja98 <tejachaitu96@gmail.com>
---
 .../com/android/server/NativeDaemonConnector.java   | 21 ++++++++++++---------
 .../android/server/NetworkManagementService.java    |  2 +-
 2 files changed, 13 insertions(+), 10 deletions(-)

diff --git a/services/core/java/com/android/server/NativeDaemonConnector.java b/services/core/java/com/android/server/NativeDaemonConnector.java
index b5a8332375f..d9a6a408d01 100644
--- a/services/core/java/com/android/server/NativeDaemonConnector.java
+++ b/services/core/java/com/android/server/NativeDaemonConnector.java
@@ -75,7 +75,7 @@
     private AtomicInteger mSequenceNumber;
 
     private static final long DEFAULT_TIMEOUT = 1 * 60 * 1000; /* 1 minute */
-    private static final long WARN_EXECUTE_DELAY_MS = 500; /* .5 sec */
+    private static final long WARN_EXECUTE_DELAY_MS = 5500; /* 5.5 sec */
 
     /** Lock held whenever communicating with native daemon. */
     private final Object mDaemonLock = new Object();
@@ -133,18 +133,22 @@ public void setWarnIfHeld(Object warnIfHeld) {
     public void run() {
         mCallbackHandler = new Handler(mLooper, this);
 
+        long startTime = 0;
         while (true) {
             try {
                 listenToSocket();
             } catch (Exception e) {
-                loge("Error in NativeDaemonConnector: " + e);
-                String shutdownAct = SystemProperties.get(
-                        ShutdownThread.SHUTDOWN_ACTION_PROPERTY, "");
-                if (shutdownAct != null && shutdownAct.length() > 0) {
-                    // The device is in middle of shutdown.
-                    break;
+                long currentTime = SystemClock.uptimeMillis();
+                long elapsedTime = currentTime - startTime;
+
+                if (elapsedTime >= 5000 && startTime > 0) {
+                    startTime = 0;
                 }
-                SystemClock.sleep(5000);
+
+                if (startTime == 0)
+                    startTime = currentTime;
+
+                SystemClock.sleep(100);
             }
         }
     }
@@ -275,7 +279,6 @@ private void listenToSocket() throws IOException {
                 }
             }
         } catch (IOException ex) {
-            loge("Communications error: " + ex);
             throw ex;
         } finally {
             synchronized (mDaemonLock) {
diff --git a/services/core/java/com/android/server/NetworkManagementService.java b/services/core/java/com/android/server/NetworkManagementService.java
index 4099d93e2f1..13b0c7ccb72 100644
--- a/services/core/java/com/android/server/NetworkManagementService.java
+++ b/services/core/java/com/android/server/NetworkManagementService.java
@@ -925,7 +925,7 @@ public boolean onEvent(int code, String raw, String[] cooked) {
                         timestampNanos = SystemClock.elapsedRealtimeNanos();
                     }
                     boolean isActive = cooked[2].equals("active");
-                    notifyInterfaceClassActivity(Integer.parseInt(cooked[3]),
+                    notifyInterfaceClassActivity(cooked[3] == null ? 0 : Integer.parseInt(cooked[3]),
                             isActive ? DataConnectionRealTimeInfo.DC_POWER_STATE_HIGH
                             : DataConnectionRealTimeInfo.DC_POWER_STATE_LOW,
                             timestampNanos, processUid, false);

From 4152fc74d441043f6c3af146497bd0ee8b58b070 Mon Sep 17 00:00:00 2001
From: LineageOS-MTK <luzejij@binka.me>
Date: Mon, 9 Oct 2017 23:50:42 +0300
Subject: [PATCH] Fix MediaPlayer-JNI
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Исправляет ошибку:
E MediaPlayer-JNI: JNIMediaPlayerFactory: bIsQCMediaPlayerPresent 0

Signed-off-by: teja98 <tejachaitu96@gmail.com>
---
 media/java/android/media/MediaFile.java |   4 +-
 media/jni/android_media_MediaPlayer.cpp | 174 +-------------------------------
 2 files changed, 5 insertions(+), 173 deletions(-)

diff --git a/media/java/android/media/MediaFile.java b/media/java/android/media/MediaFile.java
index aa2bd57eb1f..5cb45ca1975 100644
--- a/media/java/android/media/MediaFile.java
+++ b/media/java/android/media/MediaFile.java
@@ -117,10 +117,9 @@
     public static final int FILE_TYPE_PLS      = 42;
     public static final int FILE_TYPE_WPL      = 43;
     public static final int FILE_TYPE_HTTPLIVE = 44;
-    public static final int FILE_TYPE_DASH     = 45;
 
     private static final int FIRST_PLAYLIST_FILE_TYPE = FILE_TYPE_M3U;
-    private static final int LAST_PLAYLIST_FILE_TYPE = FILE_TYPE_DASH;
+    private static final int LAST_PLAYLIST_FILE_TYPE = FILE_TYPE_HTTPLIVE;
 
     // Drm file types
     public static final int FILE_TYPE_FL      = 51;
@@ -289,7 +288,6 @@ private static boolean isWMVEnabled() {
         addFileType("MPEG", FILE_TYPE_MP2PS, "video/mp2p");
         addFileType("DIVX", FILE_TYPE_DIVX, "video/divx");
         addFileType("FLV", FILE_TYPE_FLV, "video/flv");
-        addFileType("MPD", FILE_TYPE_DASH, "application/dash+xml");
         addFileType("QCP", FILE_TYPE_QCP, "audio/qcelp");
         addFileType("AC3", FILE_TYPE_AC3, "audio/ac3");
         addFileType("EC3", FILE_TYPE_EC3, "audio/eac3");
diff --git a/media/jni/android_media_MediaPlayer.cpp b/media/jni/android_media_MediaPlayer.cpp
index e68f6ab6338..2fb1a3b9fbc 100644
--- a/media/jni/android_media_MediaPlayer.cpp
+++ b/media/jni/android_media_MediaPlayer.cpp
@@ -49,7 +49,6 @@
 #include <gui/Surface.h>
 #include <binder/IPCThreadState.h>
 #include <binder/IServiceManager.h>
-#include <dlfcn.h>
 
 #include "android_util_Binder.h"
 // ----------------------------------------------------------------------------
@@ -138,159 +137,6 @@ void JNIMediaPlayerListener::notify(int msg, int ext1, int ext2, const Parcel *o
     }
 }
 
-
-static const char *EXTMEDIAJNI_LIB_NAME             = "libextmedia_jni.so";
-static const char *kCreateJNIExtMediaPlayerListener = "CreateJNIExtMediaPlayerListener";
-static const char *kCheckExtMedia                   = "checkExtMedia";
-static const char *kCreateNativeQCMediaPlayer       = "CreateNativeQCMediaPlayer";
-typedef MediaPlayerListener* (*CreateJNIExtMediaPlayerListenerFn)(JNIEnv *, jobject, jobject, sp<MediaPlayerListener> listener);
-typedef bool (*CheckExtMediaFn)(JNIEnv *env, jobject);
-typedef MediaPlayer* (*CreateNativeQCMediaPlayerFn)();
-
-
-
-class JNIMediaPlayerFactory {
-  public:
-    JNIMediaPlayerFactory() {};
-    static bool CheckAndCreateExtMediaPlayer(JNIEnv *env, jobject thiz, jobject weak_this, sp<MediaPlayerListener> &listener, sp<MediaPlayer> &mp);
-  private:
-    static void *mLibHandle;
-    static void loadLib();
-
-    static CreateJNIExtMediaPlayerListenerFn  loadJNIExtMediaPlayerListener();
-    static CreateJNIExtMediaPlayerListenerFn sExtDashListnerFnPtr;
-
-    static CheckExtMediaFn sExtMediaFn;
-    static CheckExtMediaFn loadExtMedia();
-
-    static CreateNativeQCMediaPlayerFn  sNativeQCMediaPlayerFn;
-    static CreateNativeQCMediaPlayerFn loadNativeQCMediaPlayer();
-
-    static sp<MediaPlayerListener> createExtMediaPlayerListener(JNIEnv *env, jobject thiz, jobject weak_this, sp<MediaPlayerListener> listener);
-    static bool checkExtMedia(JNIEnv *env, jobject thiz);
-    static void CreateNativeQCMediaPlayer(sp<MediaPlayer> &mp);
-};
-
-void *JNIMediaPlayerFactory::mLibHandle = NULL;
-
-CreateJNIExtMediaPlayerListenerFn JNIMediaPlayerFactory::sExtDashListnerFnPtr =
-        JNIMediaPlayerFactory::loadJNIExtMediaPlayerListener();
-
-CheckExtMediaFn JNIMediaPlayerFactory::sExtMediaFn =
-        JNIMediaPlayerFactory::loadExtMedia();
-
-CreateNativeQCMediaPlayerFn JNIMediaPlayerFactory::sNativeQCMediaPlayerFn =
-        JNIMediaPlayerFactory::loadNativeQCMediaPlayer();
-
-bool load_fail = false;
-
-void JNIMediaPlayerFactory::loadLib()
-{
-    if (load_fail) {
-        return;
-    }
-
-    if (!mLibHandle) {
-        mLibHandle = ::dlopen(EXTMEDIAJNI_LIB_NAME, RTLD_LAZY);
-        if (!mLibHandle) {
-            ALOGI("%s", dlerror());
-            load_fail = true;
-            return;
-        }
-    ALOGI("Opened %s", EXTMEDIAJNI_LIB_NAME);
-    }
-}
-
-CreateJNIExtMediaPlayerListenerFn JNIMediaPlayerFactory::loadJNIExtMediaPlayerListener()
-{
-    loadLib();
-    CreateJNIExtMediaPlayerListenerFn  pCreateExtDashListnerFnPtr = NULL;
-    if (mLibHandle != NULL) {
-        pCreateExtDashListnerFnPtr = (CreateJNIExtMediaPlayerListenerFn)
-            dlsym(mLibHandle, kCreateJNIExtMediaPlayerListener);
-        if (pCreateExtDashListnerFnPtr == NULL) {
-            ALOGW("Failed to load symbol %s : %s", kCreateJNIExtMediaPlayerListener, dlerror());
-        }
-    }
-    return pCreateExtDashListnerFnPtr;
-}
-
-CheckExtMediaFn JNIMediaPlayerFactory::loadExtMedia()
-{
-    loadLib();
-    CheckExtMediaFn pCheckExtMediaFnPtr = NULL;
-    if (mLibHandle != NULL) {
-        pCheckExtMediaFnPtr = (CheckExtMediaFn)dlsym(mLibHandle, kCheckExtMedia);
-        if (pCheckExtMediaFnPtr == NULL) {
-            ALOGW("Failed to load symbol %s : %s", kCheckExtMedia, dlerror());
-        }
-    }
-    return pCheckExtMediaFnPtr;
-}
-
-CreateNativeQCMediaPlayerFn JNIMediaPlayerFactory::loadNativeQCMediaPlayer()
-{
-    loadLib();
-    CreateNativeQCMediaPlayerFn pCreateNativeQCMediaPlayerFnPtr = NULL;
-    if (mLibHandle != NULL) {
-        pCreateNativeQCMediaPlayerFnPtr = (CreateNativeQCMediaPlayerFn)
-            dlsym(mLibHandle, kCreateNativeQCMediaPlayer);
-        if (pCreateNativeQCMediaPlayerFnPtr == NULL) {
-            ALOGW("Failed to load symbol %s : %s", kCreateNativeQCMediaPlayer, dlerror());
-        }
-    }
-    return pCreateNativeQCMediaPlayerFnPtr;
-}
-
-
-sp<MediaPlayerListener> JNIMediaPlayerFactory::createExtMediaPlayerListener(JNIEnv *env, jobject thiz, jobject weak_this, sp<MediaPlayerListener> listener)
-{
-    if (checkExtMedia(env, thiz)) {
-        if (sExtDashListnerFnPtr ) {
-            listener = (*sExtDashListnerFnPtr)(env, thiz, weak_this, listener);
-            if (listener != NULL) {
-                ALOGE("JNIMediaPlayerFactory: createExtMediaPlayerListener : success");
-            }
-        }
-    }
-    return listener;
-}
-
-void JNIMediaPlayerFactory::CreateNativeQCMediaPlayer(sp<MediaPlayer> &mp)
-{
-    if (sNativeQCMediaPlayerFn) {
-        mp = (*sNativeQCMediaPlayerFn)();
-        if (mp != NULL) {
-            ALOGE("JNIMediaPlayerFactory:  CreateNativeQCMediaPlayer : Success");
-        }
-    }
-}
-
-
-bool JNIMediaPlayerFactory::checkExtMedia(JNIEnv *env, jobject thiz)
-{
-    bool bIsQCMediaPlayerPresent = false;
-    if (sExtMediaFn) {
-        bIsQCMediaPlayerPresent = (*sExtMediaFn)(env, thiz);
-    }
-    ALOGI("JNIMediaPlayerFactory: bIsQCMediaPlayerPresent %d", bIsQCMediaPlayerPresent);
-    return bIsQCMediaPlayerPresent;
-}
-
-bool JNIMediaPlayerFactory::CheckAndCreateExtMediaPlayer(
-         JNIEnv *env, jobject thiz, jobject weak_this, sp<MediaPlayerListener> &listener, sp<MediaPlayer> &mp)
-{
-    bool bOk = false;
-    listener = createExtMediaPlayerListener(env, thiz, weak_this, listener);
-    if (listener != NULL && checkExtMedia(env,thiz)) {
-        CreateNativeQCMediaPlayer(mp);
-        if (mp != NULL) {
-            bOk = true;
-        }
-    }
-    return bOk;
-}
-
 // ----------------------------------------------------------------------------
 
 static sp<MediaPlayer> getMediaPlayer(JNIEnv* env, jobject thiz)
@@ -1022,26 +868,14 @@ static void
 android_media_MediaPlayer_native_setup(JNIEnv *env, jobject thiz, jobject weak_this)
 {
     ALOGV("native_setup");
-
-    sp<MediaPlayer> mp = NULL;
-
-    bool bOk = false;
-    JNIMediaPlayerFactory *jniMediaPlayerFactory = new JNIMediaPlayerFactory();
-
-    sp<MediaPlayerListener> listener = new JNIMediaPlayerListener(env, thiz, weak_this);
-
-    if (jniMediaPlayerFactory) {
-        bOk = jniMediaPlayerFactory->CheckAndCreateExtMediaPlayer(env, thiz, weak_this, listener, mp);
-        delete(jniMediaPlayerFactory);
-    }
-
-    if (!bOk){
-        mp = new MediaPlayer();
-    }
+    sp<MediaPlayer> mp = new MediaPlayer();
     if (mp == NULL) {
         jniThrowException(env, "java/lang/RuntimeException", "Out of memory");
         return;
     }
+
+    // create new listener and give it to MediaPlayer
+    sp<JNIMediaPlayerListener> listener = new JNIMediaPlayerListener(env, thiz, weak_this);
     mp->setListener(listener);
 
     // Stow our new C++ MediaPlayer in an opaque field in the Java object.

From 2132add9221d9ef26d0c2c3065cdb859749c0c9a Mon Sep 17 00:00:00 2001
From: LineageOS-MTK <luzejij@binka.me>
Date: Mon, 9 Oct 2017 23:54:00 +0300
Subject: [PATCH] Fix BatteryStatsService
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Исправляет ошибки:
BatteryStatsService: Timeout reading modem stats
BatteryStatsService: power: Missing API
---
 .../core/java/com/android/server/am/BatteryStatsService.java | 12 ------------
 .../core/jni/com_android_server_am_BatteryStatsService.cpp   |  6 ------
 2 files changed, 18 deletions(-)

diff --git a/services/core/java/com/android/server/am/BatteryStatsService.java b/services/core/java/com/android/server/am/BatteryStatsService.java
index bb5a8fefff0..3d36076f27d 100644
--- a/services/core/java/com/android/server/am/BatteryStatsService.java
+++ b/services/core/java/com/android/server/am/BatteryStatsService.java
@@ -1450,7 +1450,6 @@ private WifiActivityEnergyInfo extractDelta(WifiActivityEnergyInfo latest) {
     void updateExternalStatsSync(final String reason, int updateFlags) {
         SynchronousResultReceiver wifiReceiver = null;
         SynchronousResultReceiver bluetoothReceiver = null;
-        SynchronousResultReceiver modemReceiver = null;
 
         synchronized (mExternalStatsLock) {
             if (mContext == null) {
@@ -1486,11 +1485,6 @@ void updateExternalStatsSync(final String reason, int updateFlags) {
                 if (mTelephony == null) {
                     mTelephony = TelephonyManager.from(mContext);
                 }
-
-                if (mTelephony != null) {
-                    modemReceiver = new SynchronousResultReceiver();
-                    mTelephony.requestModemActivityInfo(modemReceiver);
-                }
             }
 
             WifiActivityEnergyInfo wifiInfo = null;
@@ -1508,12 +1502,6 @@ void updateExternalStatsSync(final String reason, int updateFlags) {
                 Slog.w(TAG, "Timeout reading bt stats");
             }
 
-            try {
-                modemInfo = awaitControllerInfo(modemReceiver);
-            } catch (TimeoutException e) {
-                Slog.w(TAG, "Timeout reading modem stats");
-            }
-
             synchronized (mStats) {
                 mStats.addHistoryEventLocked(
                         SystemClock.elapsedRealtime(),
diff --git a/services/core/jni/com_android_server_am_BatteryStatsService.cpp b/services/core/jni/com_android_server_am_BatteryStatsService.cpp
index ecdc71e6127..daa6444cc90 100644
--- a/services/core/jni/com_android_server_am_BatteryStatsService.cpp
+++ b/services/core/jni/com_android_server_am_BatteryStatsService.cpp
@@ -191,12 +191,6 @@ static jint getPlatformLowPowerStats(JNIEnv* env, jobject /* clazz */, jobject o
         goto error;
     }
 
-    if (! (gPowerModule->get_platform_low_power_stats && gPowerModule->get_number_of_platform_modes
-       && gPowerModule->get_voter_list)) {
-        ALOGE("%s: Missing API", POWER_HARDWARE_MODULE_ID);
-        goto error;
-    }
-
     if (gPowerModule->get_number_of_platform_modes) {
         num_modes = gPowerModule->get_number_of_platform_modes(gPowerModule);
     }
	 
From f488e73caae9f58d609ee9c1a3dc41eefa33e851 Mon Sep 17 00:00:00 2001
From: fire855 <thefire855@gmail.com>
Date: Sun, 17 Apr 2016 13:39:34 +0200
Subject: [PATCH] Add prepareWithoutScan (for FMRadio)

Change-Id: I81fb9ec96597f07310ca89af84ca85d647eecee0
---
 api/current.txt                           | 1 +
 api/system-current.txt                    | 1 +
 media/java/android/media/MediaPlayer.java | 3 +++
 3 files changed, 5 insertions(+)

diff --git a/api/current.txt b/api/current.txt
index 8655d899580..941cd218833 100644
--- a/api/current.txt
+++ b/api/current.txt
@@ -21192,6 +21192,7 @@ package android.media {
     method public boolean isPlaying();
     method public void pause() throws java.lang.IllegalStateException;
     method public void prepare() throws java.io.IOException, java.lang.IllegalStateException;
+    method public void prepareWithoutScan() throws java.io.IOException, java.lang.IllegalStateException;
     method public void prepareAsync() throws java.lang.IllegalStateException;
     method public void release();
     method public void reset();
diff --git a/api/system-current.txt b/api/system-current.txt
index 0fe164a269c..920214f081b 100644
--- a/api/system-current.txt
+++ b/api/system-current.txt
@@ -22721,6 +22721,7 @@ package android.media {
     method public boolean isPlaying();
     method public void pause() throws java.lang.IllegalStateException;
     method public void prepare() throws java.io.IOException, java.lang.IllegalStateException;
+    method public void prepareWithoutScan() throws java.io.IOException, java.lang.IllegalStateException;
     method public void prepareAsync() throws java.lang.IllegalStateException;
     method public void release();
     method public void reset();
diff --git a/media/java/android/media/MediaPlayer.java b/media/java/android/media/MediaPlayer.java
index e5f7527c9db..fdc18934914 100644
--- a/media/java/android/media/MediaPlayer.java
+++ b/media/java/android/media/MediaPlayer.java
@@ -1184,6 +1184,9 @@ public void prepare() throws IOException, IllegalStateException {
         _prepare();
         scanInternalSubtitleTracks();
     }
+    public void prepareWithoutScan() throws IOException, IllegalStateException {
+        _prepare();
+    }
 
     private native void _prepare() throws IOException, IllegalStateException;
 
From 8b6db19e13ada2f72ab66b8854a1314ca5b4d940 Mon Sep 17 00:00:00 2001
From: Meticulus <theonejohnnyd@gmail.com>
Date: Sun, 11 Sep 2016 06:36:28 -0500
Subject: [PATCH] Fix Incall UI crash

Change-Id: I3fa70da9ee597b5001963ab87086339bbb511441
---
 libs/hwui/LayerRenderer.cpp | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/libs/hwui/LayerRenderer.cpp b/libs/hwui/LayerRenderer.cpp
index 137316f5772..6cc0529e505 100644
--- a/libs/hwui/LayerRenderer.cpp
+++ b/libs/hwui/LayerRenderer.cpp
@@ -194,7 +194,13 @@ Layer* LayerRenderer::createRenderLayer(RenderState& renderState, uint32_t width
         ALOGW("Could not obtain an FBO");
         return nullptr;
     }
-
+#ifdef MTK_HARDWARE
+    if (width == 0 && height == 0) {
+        ALOGW("Trying to obtain a zero-size layer, setting fall-back size 512x768");
+        width = 512;
+        height = 768;
+    }
+#endif
     caches.textureState().activateTexture(0);
     Layer* layer = caches.layerCache.get(renderState, width, height);
     if (!layer) {
@@ -327,7 +333,7 @@ void LayerRenderer::destroyLayer(Layer* layer) {
 }
 
 void LayerRenderer::flushLayer(RenderState& renderState, Layer* layer) {
-#ifdef GL_EXT_discard_framebuffer
+#if 0
     if (!layer) return;
 
     GLuint fbo = layer->getFbo();
